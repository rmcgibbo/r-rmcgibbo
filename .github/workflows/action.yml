name: "Build"
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  x86-64:
    runs-on: ubuntu-20.04
    steps:

    # Installation
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v13
      with:
        install_url: https://nixos-nix-install-tests.cachix.org/serve/lb41az54kzk6j12p81br4bczary7m145/install
        install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
        extra_nix_config: |
          experimental-features = nix-command flakes

    # Build
    - name: Build
      run: |
        nix build .#nixbot-frontend -L --show-trace
        nix build .#nixbot-backend -L --show-trace


  # aarch64:
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v2.3.4
  #   - uses: cachix/install-nix-action@v12
  #     with:
  #       nix_path: nixpkgs=channel:nixos-20.09
  #   - run: |
  #        DEBIAN_FRONTEND=noninteractive
  #        sudo apt-get update -q -y && sudo apt-get install -q -y qemu-system-aarch64 qemu-efi binfmt-support qemu-user-static
  #        mkdir -p ~/.config/nix
  #        sudo bash -c "echo system-features = aarch64-linux arm-linux >> /etc/nix/nix.conf"
  #   - uses: cachix/cachix-action@v8
  #     with:
  #       name: nixpkgs-review-bot
  #       authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
  #   - name: Build
  #     timeout-minutes: 3000
  #     run: |
  #       nix build \
  #         --print-build-logs \
  #         --option system aarch64-linux \
  #         --option sandbox false \
  #         --extra-platforms aarch64-linux \
  #         -f . \
  #         nixbot-backend nixbot-frontend
